# Generated by Django 5.2.6 on 2025-09-18 23:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LibraryBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(blank=True, max_length=13, null=True)),
                ('title', models.CharField(max_length=300)),
                ('author', models.CharField(max_length=200)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('publication_year', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('total_copies', models.IntegerField(default=0)),
                ('available_copies', models.IntegerField(default=0)),
                ('shelf_location', models.CharField(blank=True, max_length=50, null=True)),
                ('google_books_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('image_links', models.URLField(blank=True, null=True)),
                ('image_data', models.BinaryField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('audience_type', models.CharField(blank=True, max_length=50, null=True)),
                ('saleability', models.BooleanField(default=False)),
                ('last_search', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('library.librarybook',),
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('result_count', models.IntegerField(default=0)),
                ('source', models.CharField(choices=[('google', 'Google Books'), ('local', 'Local Library')], default='google', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('BORROWED', 'Borrowed'), ('PURCHASED', 'Purchased')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('returned', 'Returned'), ('lost', 'Lost'), ('damaged', 'Damaged')], default='active', max_length=20)),
                ('borrowed_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('returned_date', models.DateTimeField(blank=True, null=True)),
                ('purchased_date', models.DateTimeField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fine_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('fine_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.librarybook')),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_books', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('fine_payment', 'Fine Payment'), ('book_purchase', 'Book Purchase'), ('damage_fee', 'Damage Fee'), ('deposit', 'Security Deposit'), ('refund', 'Refund')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_library_transactions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='library.userbook')),
            ],
        ),
        migrations.CreateModel(
            name='BookBorrowRecord',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('library.userbook',),
        ),
        migrations.AddIndex(
            model_name='librarybook',
            index=models.Index(fields=['school', 'category'], name='library_lib_school__e9d501_idx'),
        ),
        migrations.AddIndex(
            model_name='librarybook',
            index=models.Index(fields=['school', 'title'], name='library_lib_school__6c43db_idx'),
        ),
        migrations.AddIndex(
            model_name='librarybook',
            index=models.Index(fields=['google_books_id'], name='library_lib_google__535c4b_idx'),
        ),
        migrations.AddIndex(
            model_name='librarybook',
            index=models.Index(fields=['last_search'], name='library_lib_last_se_3cb193_idx'),
        ),
        migrations.AddIndex(
            model_name='search',
            index=models.Index(fields=['user', 'created_at'], name='library_sea_user_id_0173ec_idx'),
        ),
        migrations.AddIndex(
            model_name='search',
            index=models.Index(fields=['school', 'created_at'], name='library_sea_school__786b4d_idx'),
        ),
        migrations.AddIndex(
            model_name='search',
            index=models.Index(fields=['query', 'source'], name='library_sea_query_122024_idx'),
        ),
        migrations.AddIndex(
            model_name='userbook',
            index=models.Index(fields=['user', 'type', 'status'], name='library_use_user_id_cc074b_idx'),
        ),
        migrations.AddIndex(
            model_name='userbook',
            index=models.Index(fields=['book', 'type'], name='library_use_book_id_2ca4e3_idx'),
        ),
        migrations.AddIndex(
            model_name='userbook',
            index=models.Index(fields=['due_date', 'status'], name='library_use_due_dat_de00b9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userbook',
            unique_together={('user', 'book', 'type')},
        ),
        migrations.AddIndex(
            model_name='librarytransaction',
            index=models.Index(fields=['user', 'created_at'], name='library_lib_user_id_c41453_idx'),
        ),
        migrations.AddIndex(
            model_name='librarytransaction',
            index=models.Index(fields=['transaction_type', 'created_at'], name='library_lib_transac_d8def5_idx'),
        ),
    ]
